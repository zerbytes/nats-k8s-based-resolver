# -- Your NATS server/cluster URL here (REQUIRED)
natsURL: "nats://nats:4222"

# -- Manager Deployment Configurations
manager:
  # -- Number of manager pod replicas
  replicas: 1

  container:
    image:
      # -- Manager container image repository
      repository: ghcr.io/zerbytes/nats-k8s-based-resolver
      # -- Manager container image tag
      tag: main
    # -- Image pull policy for manager container
    imagePullPolicy: IfNotPresent

    # -- Command-line arguments for manager container
    args:
      - "--leader-elect"
      - "--metrics-bind-address=:8443"
      - "--health-probe-bind-address=:8081"
      - "--nats-url={{ .Values.natsURL }}"

    # -- Resource limits and requests for manager container
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi

    livenessProbe:
      # -- Liveness probe configuration for manager container
      initialDelaySeconds: 15
      periodSeconds: 20
      httpGet:
        path: /healthz
        port: 8081
    readinessProbe:
      # -- Readiness probe configuration for manager container
      initialDelaySeconds: 5
      periodSeconds: 10
      httpGet:
        path: /readyz
        port: 8081
    # -- Security context for manager container
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - "ALL"
    # -- Additional volume mounts for manager container
    additionalVolumeMounts:
      - name: tmp-dir
        mountPath: /tmp

  # -- Pod-level security context for manager
  securityContext:
    runAsUser: 65532
    runAsGroup: 65532
    fsGroup: 65532
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

  # -- Termination grace period for manager pods
  terminationGracePeriodSeconds: 10

  # -- Service account name for manager pods
  serviceAccountName: nats-k8s-based-resolver-controller-manager

  # -- Additional volumes for manager pods
  additionalVolumes:
    - name: tmp-dir
      emptyDir:
        sizeLimit: 10Mi
        medium: Memory

# -- Resolver Deployment Configurations
resolver:
  # -- Number of resolver pod replicas
  replicas: 1
  container:
    image:
      # -- Resolver container image repository
      repository: ghcr.io/zerbytes/nats-k8s-based-resolver
      # -- Resolver container image tag
      tag: main

    # -- Image pull policy for resolver container
    imagePullPolicy: IfNotPresent

    # -- Command-line arguments for resolver container
    args:
      - "--metrics-bind-address=:8443"
      - "--health-probe-bind-address=:8081"
      - "--nats-url={{ .Values.natsURL }}"

    # -- Resource limits and requests for resolver container
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi

    livenessProbe:
      # -- Liveness probe configuration for resolver container
      initialDelaySeconds: 15
      periodSeconds: 20
      httpGet:
        path: /healthz
        port: 8081
    readinessProbe:
      # -- Readiness probe configuration for resolver container
      initialDelaySeconds: 5
      periodSeconds: 10
      httpGet:
        path: /readyz
        port: 8081

    # -- Security context for resolver container
    securityContext:
      allowPrivilegeEscalation: false
      runAsUser: 65532
      runAsGroup: 65532
      runAsNonRoot: true
      fsGroup: 65532
      capabilities:
        drop:
          - "ALL"

    # -- Additional volume mounts for resolver container
    additionalVolumeMounts:
      - name: tmp-dir
        mountPath: /tmp

  # -- Pod-level security context for resolver
  securityContext:
    runAsUser: 65532
    runAsGroup: 65532
    fsGroup: 65532
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

  # -- Termination grace period for resolver pods
  terminationGracePeriodSeconds: 10

  # -- Service account name for resolver pods
  serviceAccountName: nats-k8s-based-resolver-controller-manager

  # -- Additional volumes for resolver pods
  additionalVolumes:
    - name: tmp-dir
      emptyDir:
        sizeLimit: 10Mi
        medium: Memory

# -- To enable RBAC (Permissions) configurations
rbac:
  enable: true

# -- To install the CRDs via Helm
crd:
  # This option determines whether the CRDs are included
  # in the installation process.
  enable: true

  # Enabling this option adds the "helm.sh/resource-policy": keep
  # annotation to the CRD, ensuring it remains installed even when
  # the Helm release is uninstalled.
  # NOTE: Removing the CRDs will also remove all cert-manager CR(s)
  # (Certificates, Issuers, ...) due to garbage collection.
  keep: true

# -- Set to true to generate manifests for exporting metrics.
# To disable metrics export set false, and ensure that the
# ControllerManager argument "--metrics-bind-address=:8443" is removed.
metrics:
  enable: true

# -- To enable a ServiceMonitor to export metrics to Prometheus set true
prometheus:
  enable: false

# -- To enable cert-manager injection to webhooks set true
certmanager:
  enable: false

# -- To enable NetworkPolicies set true (needs additional policies to allow traffic to the NATS server/cluster)
networkPolicy:
  enable: false
